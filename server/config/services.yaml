# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  products_images: "/images/products/"
  products_directory: "%kernel.project_dir%/public/images/products"
  types_images: "/images/types/"
  types_directory: "%kernel.project_dir%/public/images/types"

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"

  Doctrine\ORM\EntityManagerInterface $entityManager: "@doctrine.orm.entity_manager"

  App\EventListener\ExceptionListener:
    tags:
      - { name: kernel.event_listener, event: kernel.exception }

  Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface:
    alias: Symfony\Bundle\SecurityBundle\Security

  App\Services\Uploader\ProductImageUploader:
    arguments:
      $targetDirectory: "%products_directory%"

  App\Services\Uploader\TypesImageUploader:
    arguments:
      $targetDirectory: "%types_directory%"

  App\Services\ProductService:
    arguments:
      $uploader: '@App\Services\Uploader\ProductImageUploader'

  App\Services\TypeService:
    arguments:
      $uploader: '@App\Services\Uploader\TypesImageUploader'

  App\Repository\ProductRepository:
    arguments:
      - "@fos_elastica.finder.product"
# config/services.yaml

# ...
# add more service definitions when explicit configuration is needed
# please note that last definitions always *replace* previous ones

knp_paginator:
  page_range: 5 # number of links shown in the pagination menu (e.g: you have 10 pages, a page_range of 3, on the 5th page you'll see links to page 4, 5, 6)
  default_options:
    page_name: page # page query parameter name
    sort_field_name: sort # sort field query parameter name
    sort_direction_name: direction # sort direction query parameter name
    distinct: true # ensure distinct results, useful when ORM queries are using GROUP BY statements
    filter_field_name: filterField # filter field query parameter name
    filter_value_name: filterValue # filter value query parameter name
  template:
    pagination: "@KnpPaginator/Pagination/sliding.html.twig" # sliding pagination controls template
    rel_links: "@KnpPaginator/Pagination/rel_links.html.twig" # <link rel=...> tags template
    sortable: "@KnpPaginator/Pagination/sortable_link.html.twig" # sort link template
    filtration: "@KnpPaginator/Pagination/filtration.html.twig" # filters template
